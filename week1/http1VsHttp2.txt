HTML 1.1 v/s HTML 2

- Disadvantages of HTML 1.1.
	- HTTP 1.1 had no major revision for 15 years.
	- With an increase in amount of data being transmitted in modern day applications, the shortcomings of this version became more prominent.

- HTTP 2 solves many problems that were overlooked with HTTP 1.1.
- The primary advantage of HTTP 2 over HTTP 1.1 is that it is much faster and more efficient.
- HTTP 2 achieves by doing the following things.
	1. Prioritization -
		- Prioritization refers to the order in which a page loads its content. Prioritization affects a page's load time and therefore the user's perception of the web page.
		- In HTTP 2, the developers have hands-on, detailed control over prioritization allowing them to maximize the actual and perceived page load time.
		- HTTP 2 offers weighted prioritization. This allows developers to decide which portion of the web page loads first.
		- in HTTP 2, the server multiplexes multiple streams of data and sends them all to the client. The developers can assign each of these data streams weight and the portion with the highest weight is loaded first.

	2. Multiplexing -
		- HTTP 1.1 loads resources one after the other. If one can not be loaded, it blocks all the other resources behind it.
		- HTTP 2 uses a single TCP connection to send multiple streams of data at once so that no resource is blocked. This is done by splitting data in binary code messages and numbering these messages.

	3. Binary PRotocol -
		- HTTP 1.1 used to process text commands to complete request-response cycles.
		- HTTP 2 uses binary commands to execute the same tasks. This attribute eases complications with framing and simplifies implementation of commands (which were confusing because of things like white spaces).

	4. Server Push -
		- In HTTP 1.1 a server only sends data to the client when the client requests for it.
		- In HTTP 2 a server may send (or push) content to the client even before the client asks for it. If a client requests a particular resource and it is understood that another will be needed in the future along with the requested resource, the server will send the other resource before the client requests without waiting for the request.
		- The client save the additional resource in its cache.

	5. Header Compression -
		- Both HTTP 1.1 and HTTP 2 compress HTTP messages to make them smaller.
		- HTTP 2 takes it one step further by eliminating the redundant information in HTTP header packets using a technique called HPACK which makes page loading even faster.